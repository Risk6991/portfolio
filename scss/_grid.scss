// variables
$breakpoint-md: 768px; // タブレットサイズ
$gutter: 16px; // ガター幅
// mixin
@mixin screenMin($break-point) {
  @media screen and (min-width: $break-point) {
    @content;
  }
}

/**
* グリッド⽣成
*
* $column-count: カラム数,
* $column-gutter: ガターの幅
* $selector: '⼦セレクタ',
* $sp-style: スマホサイズになった際のUI
* @example
* @include listGridBuilder(3);
* @include listGridBuilder(4, $gutter,
'.ActivitiesId__Photos__Item');
* @include listGridBuilder($column-count: 3, $sp-style: 'grid');
*/
@mixin listGridBuilder(
$column-count,
$column-gutter: $gutter,
$selector: "> li",
$sp-style: "vertical"
) {
// スマホサイズになった時、1列縦並び
 @if $sp-style== "vertical" {
display: flex;
flex-flow: column nowrap;
 @include screenMin($breakpoint-md) {
flex-flow: inherit;
flex-wrap: wrap;
margin: calc((#{$column-gutter} / 2) * -1);
 &:nth-child(#{$column-count}n) {
padding-right: 0;

}
}
#{$selector} {
margin-bottom: #{$column-gutter};
@content;
@include screenMin($breakpoint-md) {
padding: calc(#{$column-gutter} / 2);
width: calc(100% / #{$column-count});
margin-bottom: 0;
}
a {
&:hover,
&:focus {
opacity: 0.7;
}
}
img {
width: 100%;
height: auto;
}
}
}
// スマホサイズになった時、1⾏並びにして横スクロール
@else if $sp-style== "horizon" {
display: flex;
-ms-overflow-style: none;
overflow-y: hidden;
overflow-x: scroll;
-webkit-overflow-scrolling: touch;
overflow-scrolling: touch;
margin: calc((#{$column-gutter} / 2) * -1);
@include screenMin($breakpoint-md) {
  flex-wrap: wrap;
flex-flow: inherit;
 &:nth-child(#{$column-count}n) {
padding-right: 0;
 }
 }
 #{$selector} {
min-width: 80vw;
padding: calc(#{$column-gutter} / 2);
 @content;
 @include screenMin($breakpoint-md) {
min-width: inherit;
width: calc(100% / #{$column-count});
 }
a {
 &:hover,
 &:focus {
opacity: 0.7;
 }
 }
img {
width: 100%;
height: auto;
 }
 }
 }
